<template>

    <div class="bg_login">
        <div class="login_Box">
            <h1>Register</h1>
            <span class="login_logo">
                <i>Hua</i>
            </span>
            <Form ref="formInline" :model="formInline" :rules="ruleInline" inline class="login_form">
                <FormItem prop="username" style="width:200px">
                    <Input type="text" v-model="formInline.username" placeholder="账户">
                    <Icon type="md-people"slot="prepend" />
   
                    </Input>
                </FormItem>
                <FormItem prop="password" style="width:200px">
                    <Input type="password" v-model="formInline.password" placeholder="密码">
                        <Icon type="ios-lock-outline" slot="prepend"></Icon>
                    </Input>
                </FormItem>
                <div class="imgcode_Box">
                <FormItem prop="imgcode"  class="imgcode_input_Box">
                    <Input type="text" v-model="formInline.imgcode" placeholder="验证码" style="width:80px">
                    </Input>
                    <img :src="`data:image/png;base64,${imgBase64}`" alt="">
                </FormItem>
                <FormItem class="login_btn_Box">
                    <Button type="primary" @click="handleSubmit('formInline')">注册</Button>
                </FormItem>                    
                </div>
                <a href="" @click.prevent="toLogin">已有了账号？点击回登录</a>
                <!-- <router-link to="/login">已有了账号？点击回登录</router-link> -->
                
            </Form>
            <Spin fix v-if="spinShow">
                <Icon type="ios-loading" size=36 class="demo-spin-icon-load"></Icon>
                <div>获取验证码中...</div>
            </Spin>
        </div>
    </div>
</template>
<script>
export default {
        data () {
            return {
                spinShow:true,
                imgBase64:'',
                formInline: {
                    username: '',
                    password: '',
                    imgcode:''
                },
                ruleInline: {
                    username: [
                        { required: true, message: '请输入账户', trigger: 'blur' }
                    ],
                    password: [
                        { required: true, message: '请输入密码.', trigger: 'blur' },
                    ],
                    imgcode: [
                        { required: true, message: '请输入验证码.', trigger: 'blur' },
                    ],
                }
            }
        },
        mounted(){
            this.getCaptcha().then(res=>{
                if(res.data.code==0){
                    setTimeout(()=>{this.spinShow = false},500)
                    
                }else{
                    this.$Message.error('获取验证码错误')
                }
            })
        },
        methods: {
            handleSubmit(name) {
                this.$refs[name].validate((valid) => {
                    if (valid) {
                        this.register().then(res=>{
                            if(res.data.code == 0){
                                this.$router.push('/login')
                                this.$Message.success('注册成功!跳回登录');  
                            }
                            if(res.data.code == 300) this.$Message.error('验证码错误！');
                            if(res.data.code == 400) this.$Message.error('注册失败！请重新注册');
                        })
                        
                    } else {
                        this.$Message.error('注册失败，请填好必要信息哦！!');
                    }
                })
            },
            getCaptcha(){
                return this.$axios.post('http://localhost:7001/hua/getCaptcha').then(res=>{
                    if(res.data.code==0){
                        this.imgBase64 = res.data.data
                    }
                    
                return res
                })
            },
            toLogin(){
                this.$router.push('/login')              
            },
            register(){
                return this.$axios.post('http://localhost:7001/hua/user/register',this.formInline).then(res=>{
                    if(res.data.code == 0){

                    }
                    return res
                })
            },
        }
}
</script>
<style>
.bg_login{
    width: 100vw;
    min-width: 1200px;
    height: 100vh;
    min-width: 1000px;
    background-image: url('../../../static/bg_login.jpg');
    background-size: 100% 100%;
    background-repeat: no-repeat;
}
.login_Box{
    /* width: 400px; */
    /* height: 500px; */
    padding: 30px 50px 30px;
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    box-shadow: 0 0 15px rgba(255,255,255,.3);
    border-radius: 10px;
    background:linear-gradient(rgba(30,144,255,.3),rgba(0,0,0,.5)) 
}
.login_Box .ivu-spin-fix{
    border-radius: 10px;
}
h1{
    font-family: STHupo;
    margin-bottom: 30px;
    opacity: 0.9;
    font-size: 30px;
    font-weight: 200;
    color:#fff;
}
/* 表单 */
.login_Box .login_form>div{
    margin-right: 0
}
.login_form{
    display: flex;
    flex-direction: column;
    /* align-items: center; */
    justify-content: center;    
}
.login_logo{
    display: flex;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    box-shadow: 0 0 10px rgba(0,0,0,.3);
    background:linear-gradient(rgba(255,105,180,0.6),rgba(255,255,255,1)) ;
    align-items: center;
    justify-content: center;
    position: relative;
    margin-bottom: 50px;
    cursor: pointer;
}
.login_logo:hover{
    background-color: azure
}
.login_logo i{
    font-family: STHupo;
    font-style: normal;
    position: absolute;
    top: 50%;
    left: 50%;
    opacity: 0.3;
    font-weight: 800;
    font-size: 24px;
    color: rgba(199,21,133,1);
    transform: translateX(-50%) translateY(-50%)
}
.imgcode_Box{
    display: flex;
    flex-direction: column;
    width: 100%;
}
.imgcode_Box .imgcode_input_Box{
    width: 100%;
    display: flex;
    align-items: center
}
.imgcode_input_Box>div{
    width: 100%;    
    display: flex;
    align-items: center;
    justify-content: space-between
}
.imgcode_Box .login_btn_Box{
    display: flex;
    justify-content: center;
    width:100% ;
    /* align-self: flex-end */
}
.login_btn_Box button{
    width:150px;
}
.demo-spin-icon-load{
    animation: ani-demo-spin 1s linear infinite;
}
@keyframes ani-demo-spin {
    from { transform: rotate(0deg);}
    50%  { transform: rotate(180deg);}
    to   { transform: rotate(360deg);}
}
</style>
